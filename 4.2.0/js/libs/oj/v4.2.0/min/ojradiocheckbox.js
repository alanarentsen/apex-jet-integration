/**
 * Copyright (c) 2014, 2018, Oracle and/or its affiliates.
 * The Universal Permissive License (UPL), Version 1.0
 */
"use strict";
define(["ojs/ojcore","jquery","ojs/ojeditablevalue"],function(a,g){a.ib("oj._ojRadioCheckbox",g.oj.baseComponent,{version:"1.0.0",defaultElement:"\x3cinput\x3e",widgetEventPrefix:"oj",options:{disabled:null,checked:null,type:null},label:function(){void 0===this.Hc&&(this.Hc=this.O3());return this.Hc},refresh:function(){this._super();this.qb()},refreshDisabled:function(){this.q7()},setSelectedClass:function(a){this.element.toggleClass("oj-selected",a);this.Hc.toggleClass("oj-selected",a);this.Mi&&
this.Mi.toggleClass("oj-selected",a)},widget:function(){return this.wBa},Gh:function(a,b){var d;this._super(a,b);"checked"in b||(this.caa=!0,d=!!this.element.prop("checked"),this.option("checked",d,{_context:{Sa:!0}}));if("boolean"!==typeof this.options.checked)throw Error("checked option must be a boolean");"disabled"in b||(d=!!this.element.prop("disabled"),this.option("disabled",d,{_context:{Sa:!0}}));if("boolean"!==typeof this.options.disabled)throw Error("disabled option must be a boolean");"type"in
b||this.option("type",this.element.prop("type"),{_context:{Sa:!0}})},rc:function(){this._super();var a=this.options.type;"checkbox"==a?(this.wBa=this.element.addClass("oj-checkbox oj-component"),this.Hc=this.O3(),this.Hc.addClass("oj-checkbox-label")):"radio"==a&&(this.wBa=this.element.addClass("oj-radio oj-component"),this.Hc=this.O3(),this.Hc.addClass("oj-radio-label"));this.Mi=this.WNa();a=document.createElement("span");a.setAttribute("class","oj-radiocheckbox-icon");this.element.wrapAll(a);this._focusable(this.element);
this.Mi&&(this.Dg(this.Mi),this.Nl(this.Mi),this._focusable({element:this.Mi,applyHighlight:!0}));this.Dg(this.Hc);this.Nl(this.Hc);g.each(this.Hc,function(){g(this.childNodes).wrapAll("\x3cspan class\x3d'oj-radiocheckbox-label-text'\x3e\x3c/span\x3e")});this.qb()},wI:function(a){this.RL=a.attr("class")},yD:function(){this.RL?this.element.attr("class",this.RL):this.element.removeAttr("class")},qb:function(){this.q7();this.caa||this.TL(this.options.checked);this.options.checked&&this.setSelectedClass(this.options.checked)},
TL:function(a){this.element.prop("checked",!!a)},q7:function(){this.Hh()?(this.element.prop("disabled",!0).removeAttr("aria-disabled").removeClass("oj-enabled").addClass("oj-disabled"),this.Hc.removeClass("oj-enabled").addClass("oj-disabled"),this.Mi&&this.Mi.removeClass("oj-enabled").addClass("oj-disabled")):(this.element.prop("disabled",!1).removeAttr("aria-disabled").removeClass("oj-disabled").addClass("oj-enabled"),this.Hc.addClass("oj-enabled").removeClass("oj-disabled"),this.Mi&&this.Mi.addClass("oj-enabled").removeClass("oj-disabled"))},
_setOption:function(a,b){this._superApply(arguments);"disabled"===a&&(b=!!b,this.q7(b));"checked"===a&&(this.TL(b),this.setSelectedClass(b))},O3:function(){var c=this.element.closest("label"),b="label[for\x3d'"+this.element.prop("id")+"']",d=g(b);0!==c.length&&a.D.error("Found a label that is an input's ancestor. This is not supported in the ojCheckboxset or ojRadioset component and the component will\n\r\n      not work correctly. Use a label as a sibling to the input and use the label 'for' attribute to tie the two together.");
d=d.not(c);0===d.length&&(c=this.element.siblings(b),d=d.add(c));return d},WNa:function(){var c=null;this.element&&(c=this.element.parent(),c&&(c.hasClass("oj-choice-item")||c.hasClass("oj-choice-row")||c.hasClass("oj-choice-row-inline"))||(a.D.warn("The radioset/checkboxset's input and label dom should be wrapped in a dom node with class 'oj-choice-item'. JET is adding this missing dom to make the component work correctly."),c="label[for\x3d'"+this.element.attr("id")+"']",c=this.element.siblings().filter(c),
0!==c.length?this.element.add(c).wrapAll("\x3cspan class\x3d'oj-choice-item oj-choice-item-added'\x3e\x3c/span\x3e"):this.element.wrapAll("\x3cspan class\x3d'oj-choice-item oj-choice-item-added'\x3e\x3c/span\x3e"),c=this.element.parent()));return c},getNodeBySubId:function(a){var b=this._super(a);b||(a=a.subId,"oj-radiocheckbox-input"===a&&(b=this.element[0]),"oj-radiocheckbox-label"===a&&(b=this.label()[0]));return b||null},_destroy:function(){var a=this._super();this.Mi&&(this.Hz(this.Mi),this.tI(this.Mi));
this.Hz(this.Hc);this.tI(this.Hc);var b=this.options.type;"checkbox"==b?this.Hc.removeClass("oj-enabled oj-disabled oj-selected oj-checkbox-label"):"radio"==b&&this.Hc.removeClass("oj-enabled oj-disabled oj-selected oj-radio-label");this.Mi&&this.Mi.removeClass("oj-enabled oj-disabled oj-selected");g.each(this.Hc,function(){var a=this.getElementsByClassName("oj-radiocheckbox-label-text");void 0!==a&&g(a[0].childNodes[0]).unwrap()});this.element.unwrap();this.Mi.hasClass("oj-choice-item-added")&&this.element.unwrap();
this.Hc=this.Mi=null;return a}})});