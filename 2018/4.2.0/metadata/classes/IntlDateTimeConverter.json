{
  "name": "IntlDateTimeConverter",
  "version": "4.2.0",
  "jetVersion": "4.2.0",
  "displayName": "IntlDateTimeConverter",
  "description": "IntlDateTimeConverter",
  "methods": {
    "Init": {
      "description": "Initializes the date time converter instance with the set options.",
      "params": [
        {
          "name": "options",
          "description": "an object literal used to provide an optional information to initialize \nthe converter.",
          "type": "Object"
        }
      ]
    },
    "format": {
      "description": "Formats the isoString value using the options provided and returns a string value. \n",
      "params": [
        {
          "name": "value",
          "description": "to be formatted for display which should be an isoString",
          "type": "string"
        }
      ],
      "return": "string|Object"
    },
    "formatRelative": {
      "description": "Formats an ISOString as a relative date time, using the relativeOptions. \n",
      "params": [
        {
          "name": "value",
          "description": "value to be formatted. This value is compared with the current date \non the client to arrive at the relative formatted value.",
          "type": "string"
        },
        {
          "name": "relativeOptions",
          "description": "an Object literal containing the following properties. The \ndefault options are ignored during relative formatting -",
          "type": "Object",
          "properties": [
            {
              "name": "formatUsing",
              "description": "Specifies the relative formatting convention to. \nAllowed values are \"displayName\" and “calendar”. Setting value to 'displayName' uses the relative \ndisplay name for the instance of the dateField, and one or two past and future instances. \nWhen omitted we use the implicit rules.",
              "type": "string"
            },
            {
              "name": "dateField",
              "description": "To be used in conjunction of 'displayName' value \nof formatUsing attribute. Allowed values are: \"day\", \"week\", \"month\", \"year\", \"hour\", \"minute\", \"second\".",
              "type": "string"
            },
            {
              "name": "relativeTime",
              "description": "Allowed values are: \"fromNow\", \"toNow\". \n\"fromNow\" means the system's current date is the reference and \"toNow\" means the value attribute \nis the reference. Default \"fromNow\".",
              "type": "string"
            },
            {
              "name": "dateOnly",
              "description": "A boolean value that can be used in conjunction with \n“calendar” of formatUsing attribute. When set to true date only format is used. Example: “Sunday” \ninstead of “Sunday at 2:30 PM”. Default value is false.",
              "type": "boolean"
            },
            {
              "name": "timeZone",
              "description": "The timeZone attribute can be used to specify the \ntime zone of the value parameter. The system’s time zone is used for the current time. If timeZone \nattribute is not specified, we use the system’s time zone for both. The value parameter, which is an \niso string, can be Z or contain and offset, in this case the timeZone attribute is overwritten.",
              "type": "string"
            }
          ]
        }
      ],
      "return": "string|null"
    },
    "getHint": {
      "description": "Retrieves a hint String describing the format the value is expected to be in. THe pattern used is \nprovided through resolvedOptions, except when an actual pattern is set in the options. Otherwise \nhint is empty.",
      "return": "String"
    },
    "getOptions": {
      "description": "Returns the options called with converter initialization.",
      "return": "Object"
    },
    "resolvedOptions": {
      "description": "Returns an object literal with locale and formatting options computed during initialization of \nthe object. If options was not provided at the time of initialization, the properties will be \nderived from the locale defaults.",
      "return": "Object"
    },
    "isHourInDaySet": {
      "description": "Returns true if a 24-hour format is set; false otherwise."
    },
    "isHourInAMPMSet": {
      "description": "Returns true if 12-hour is set; false otherwise."
    },
    "isMinuteSet": {
      "description": "Returns true if minutes are shown in the time portion; false otherwise."
    },
    "isSecondSet": {
      "description": "Returns true if seconds are shown in the time portion; false otherwise."
    },
    "isMilliSecondSet": {
      "description": "Returns true if milliseconds are shown in the time portion; false otherwise."
    },
    "isYearSet": {
      "description": "Returns true if year is shown in the date portion; false otherwise."
    },
    "isMonthSet": {
      "description": "Returns true if month is shown in the date portion; false otherwise."
    },
    "isDaySet": {
      "description": "Returns true if day is shown in the date portion; false otherwise."
    },
    "isDayNameSet": {
      "description": "Returns true if the day name is shown in the date portion; false otherwise."
    },
    "calculateWeek": {
      "description": "Returns the calculated week for the isoString value",
      "params": [
        {
          "name": "value",
          "description": "to return the calculated week of",
          "type": "string"
        }
      ],
      "return": "number"
    },
    "parse": {
      "description": "Parses the value using the options provided and returns the date and time as a string \nexpressed using the ISO-8601 format (http://en.wikipedia.org/wiki/ISO_8601).\n\n\nFor converter options specific to a date, the iso date representation alone is returned. \nFor time only options, the iso time representation alone is returned. \nFor options that include both date and time, the iso date and time representation is \nreturned.\n\n\n\nFor convenience, if one wishes to retrieve a JavaScript Date object from the local isoString, a \nutility function oj.IntlConverterUtils.isoToLocalDate is provided.\n\nOr oj.IntlConverterUtils.isoToDate if one wish to utilize the timezone of the isoString.\n",
      "params": [
        {
          "name": "value",
          "description": "to parse",
          "type": "String|string"
        }
      ],
      "return": "string|Object"
    },
    "compareISODates": {
      "description": "Compares 2 ISO 8601 strings, returning the time difference between the two",
      "params": [
        {
          "name": "isoStr",
          "description": "first iso string",
          "type": "string"
        },
        {
          "name": "isoStr2",
          "description": "second iso string",
          "type": "string"
        }
      ],
      "return": "number"
    },
    "getAvailableTimeZones": {
      "description": "Gets the supported timezones for the converter. The returned value is an array of objects. Each object represents a timezone\nand contains 2 properties: Property Description id IANA timezone ID displayName It is the concatenation of 3 string: UTC timezone offset City name Generic time zone name \n\n",
      "return": "Array"
    }
  }
}